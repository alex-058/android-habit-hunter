// Generated by data binding compiler. Do not edit!
package org.othr.habithunter.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.NumberPicker;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.Deprecated;
import java.lang.Object;
import org.othr.habithunter.R;
import org.othr.habithunter.ui.addCustomHabit.AddCustomHabitViewModel;

public abstract class FragmentAddCustomHabitBinding extends ViewDataBinding {
  @NonNull
  public final Button addCustomHabitBttn;

  @NonNull
  public final RadioGroup amountTimeRadioGroup;

  @NonNull
  public final View dividerGoal;

  @NonNull
  public final View dividerIntervall;

  @NonNull
  public final TextInputLayout fieldHabitName;

  @NonNull
  public final NumberPicker numberPickerAmount;

  @NonNull
  public final NumberPicker numberPickerTime;

  @NonNull
  public final CircleImageView profileImage;

  @NonNull
  public final RadioButton radioButtonAmount;

  @NonNull
  public final RadioButton radioButtonDaily;

  @NonNull
  public final RadioButton radioButtonMonthly;

  @NonNull
  public final RadioButton radioButtonTime;

  @NonNull
  public final RadioButton radioButtonWeekly;

  @NonNull
  public final RadioGroup radioGroupIntervall;

  @NonNull
  public final TextView textAddIcon;

  @NonNull
  public final TextView textGoal;

  @NonNull
  public final TextInputEditText textHabitName;

  @NonNull
  public final TextView textIntervall;

  @Bindable
  protected AddCustomHabitViewModel mViewmodel;

  protected FragmentAddCustomHabitBinding(Object _bindingComponent, View _root,
      int _localFieldCount, Button addCustomHabitBttn, RadioGroup amountTimeRadioGroup,
      View dividerGoal, View dividerIntervall, TextInputLayout fieldHabitName,
      NumberPicker numberPickerAmount, NumberPicker numberPickerTime, CircleImageView profileImage,
      RadioButton radioButtonAmount, RadioButton radioButtonDaily, RadioButton radioButtonMonthly,
      RadioButton radioButtonTime, RadioButton radioButtonWeekly, RadioGroup radioGroupIntervall,
      TextView textAddIcon, TextView textGoal, TextInputEditText textHabitName,
      TextView textIntervall) {
    super(_bindingComponent, _root, _localFieldCount);
    this.addCustomHabitBttn = addCustomHabitBttn;
    this.amountTimeRadioGroup = amountTimeRadioGroup;
    this.dividerGoal = dividerGoal;
    this.dividerIntervall = dividerIntervall;
    this.fieldHabitName = fieldHabitName;
    this.numberPickerAmount = numberPickerAmount;
    this.numberPickerTime = numberPickerTime;
    this.profileImage = profileImage;
    this.radioButtonAmount = radioButtonAmount;
    this.radioButtonDaily = radioButtonDaily;
    this.radioButtonMonthly = radioButtonMonthly;
    this.radioButtonTime = radioButtonTime;
    this.radioButtonWeekly = radioButtonWeekly;
    this.radioGroupIntervall = radioGroupIntervall;
    this.textAddIcon = textAddIcon;
    this.textGoal = textGoal;
    this.textHabitName = textHabitName;
    this.textIntervall = textIntervall;
  }

  public abstract void setViewmodel(@Nullable AddCustomHabitViewModel viewmodel);

  @Nullable
  public AddCustomHabitViewModel getViewmodel() {
    return mViewmodel;
  }

  @NonNull
  public static FragmentAddCustomHabitBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_add_custom_habit, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentAddCustomHabitBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentAddCustomHabitBinding>inflateInternal(inflater, R.layout.fragment_add_custom_habit, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentAddCustomHabitBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_add_custom_habit, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentAddCustomHabitBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentAddCustomHabitBinding>inflateInternal(inflater, R.layout.fragment_add_custom_habit, null, false, component);
  }

  public static FragmentAddCustomHabitBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentAddCustomHabitBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentAddCustomHabitBinding)bind(component, view, R.layout.fragment_add_custom_habit);
  }
}
